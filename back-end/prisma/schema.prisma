// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       Int    @id @default(autoincrement())
  name     String
  password String
  email    String
  company  String?
  //photo  Photo[]

  created_at     DateTime         @default(now())
  UserRole       UserRole[]
  UserPermission UserPermission[]

  @@map("users")
}

model Role {
  id             Int              @id @default(autoincrement())
  name           String
  description    String
  UserRole       UserRole[]
  RolePermission RolePermission[]

  @@map("roles")
}

model UserRole {
  id      Int  @id @default(autoincrement())
  id_user Int
  user    User @relation(fields: [id_user], references: [id], onDelete: Cascade)

  id_role Int
  role    Role @relation(fields: [id_role], references: [id], onDelete: Cascade)

  @@map("user_role")
}

model Permission {
  id          Int    @id @default(autoincrement())
  name        String
  description String

  created_at     DateTime         @default(now())
  RolePermission RolePermission[]
  UserPermission UserPermission[]

  @@map("permissions")
}

model RolePermission {
  id            Int        @id @default(autoincrement())
  id_permission Int
  permission    Permission @relation(fields: [id_permission], references: [id], onDelete: Cascade)

  id_role Int
  role    Role @relation(fields: [id_role], references: [id], onDelete: Cascade)

  @@map("role_permission")
}

model UserPermission {
  id      Int  @id @default(autoincrement())
  id_user Int
  user    User @relation(fields: [id_user], references: [id], onDelete: Cascade)

  id_permission Int
  permission        Permission @relation(fields: [id_permission], references: [id], onDelete: Cascade)

  @@map("user_permission")
}

// type Photo {
//   height Int
//   width  Int
//   url    String
// }
